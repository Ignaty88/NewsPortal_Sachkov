#1.Создать двух пользователей (с помощью метода User.objects.create_user('username')).

>>> User.objects.create_user(username='user1')
>>> User.objects.create_user(username='user2')

#2.Создать два объекта модели Author, связанные с пользователями.

>>> from news.models import *
>>> u1 = User.objects.create_user(username='user1')
>>> u2 = User.objects.create_user(username='user2')
>>> Author.objects.create(authorUser=u1)
>>> Author.objects.create(authorUser=u2)

#3.Добавить 4 категории в модель Category.

>> Category.objects.create(Name='Moscow')
>>> Category.objects.create(Name='World')
>>> Category.objects.create(Name='Policy')
>>> Category.objects.create(Name='IT')

#4.Добавить 2 статьи и 1 новость.

>>> author = Author.objects.get(id=1)
>>> author2=Author.objects.get(id=2)
>>> Post.objects.create(Author=author, categoryType='NW', title='Новость про Ай-Ти в Москве', text='Какой то текст о айти в Москве’)
>>> Post.objects.create(Author=author, categoryType='AR', title='Статья о политике', text='Какой то текст о Политике')
>>> Post.objects.create(Author=author, categoryType='AR', title='Статья о мировой политике', text='Какой то текст о Мировой Политике')
>>> Post.objects.create(Author=author2, categoryType='NW', title='Новость про политику Собянина',text='Текст про политику Собянина')

#5.Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).

>>> Post.objects.get(id=1).postCategory.add(Category.objects.get(id=1)
>>> Post.objects.get(id=1).postCategory.add(Category.objects.get(id=4))
>>> Post.objects.get(id=2).postCategory.add(Category.objects.get(id=3))
>>>Post.objects.get(id=3).postCategory.add(Category.objects.get(id=3))
>>> Post.objects.get(id=3).postCategory.add(Category.objects.get(id=2))
>>> Post.objects.get(id=4).postCategory.add(Category.objects.get(id=1))
>>> Post.objects.get(id=4).postCategory.add(Category.objects.get(id=3))

#6.Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).

>>> Comment.objects.create(commentPost=Post.objects.get(id=1),commentUser=Author.objects.get(id=1).authorUser, text='В Москве лучшие айтишники')
>>> Comment.objects.create(commentPost=Post.objects.get(id=1),commentUser=Author.objects.get(id=2).authorUser, text='Питерские,айтишней!')
>>> Comment.objects.create(commentPost=Post.objects.get(id=2),commentUser=Author.objects.get(id=1).authorUser, text='В политике совсем не разбираюсь')
>>> Comment.objects.create(commentPost=Post.objects.get(id=3),commentUser=Author.objects.get(id=1).authorUser, text='Чего в мире происходит?')
>>> Comment.objects.create(commentPost=Post.objects.get(id=3),commentUser=Author.objects.get(id=2).authorUser, text='Мировая политика такая мировая')
>>> Comment.objects.create(commentPost=Post.objects.get(id=4),commentUser=Author.objects.get(id=1).authorUser, text='...опять про Собянина')

#7.Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.

>>> Post.objects.get(id=1).like()
>>> Comment.objects.get(id=2).like()
>>> Comment.objects.get(id=2).like()
>>> Comment.objects.get(id=5).like()
>>> Comment.objects.get(id=2).like()
>>> Post.objects.get(id=2).dislike()

#8. Обновить рейтинги пользователей.

>>> Author.objects.get(id=1).update_rating()
>>> Author.objects.get(id=2).update_rating()

#9.Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).

>>> winer = Author.objects.order_by('-ratingAutor')[:1]
>>> for i in winer:
...     i.ratingAutor
...     i.authorUser.username

#10.Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье

>>> Post.objects.order_by('-rating').values('dateCreation', 'Author__authorUser__username', 'rating', 'title')[0]
>>> Post.objects.order_by('-rating')[0].preview()

#11. Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.

>>> Post.objects.order_by('-rating')[0].comment_set.all().values('dateCreation', 'commentUser__username', 'rating','text')




